name: Build & Release Portable EXE

on:
  workflow_dispatch:      # ✅ Adds manual "Run workflow" button in Actions tab
  push:
    tags:
      - "v1.0.*"

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: 🔁 Checkouts repository
        uses: actions/checkout@v3

      - name: 🐍 Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 📦 Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller requests
          pip install -r requirements.txt || echo "No requirements.txt found"

      - name: 🔊 Download & Set Up FluidSynth v2.4.6
        run: |
          curl -LO https://github.com/FluidSynth/fluidsynth/releases/download/v2.4.6/fluidsynth-2.4.6-win10-x64.zip
          powershell -Command "Expand-Archive -Path fluidsynth-2.4.6-win10-x64.zip -DestinationPath fluidsynth"
          echo "${{ github.workspace }}\\fluidsynth\\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: 🔨 Build Portable EXE with PyInstaller
        run: |
          pyinstaller app.py --noconsole --onefile --name PianoRollStudio --icon=assets/icons/app_icon.ico --add-data "assets;assets" --add-data "soundbank;soundbank" --hidden-import requests --exclude-module PyQt5 --exclude-module PySide2 --exclude-module PyQt6 --exclude-module PySide5

      - name: 📂 Prepare Release Folder
        run: |
          New-Item -ItemType Directory -Name release
          Copy-Item dist\PianoRollStudio.exe release\
          if (Test-Path start.bat) { Copy-Item start.bat release\ }

      - name: 📦 Create ZIP Package
        run: |
          Compress-Archive -Path release\* -DestinationPath PianoRollStudio.zip

      - name: 🚀 Upload to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          files: PianoRollStudio.zip
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

